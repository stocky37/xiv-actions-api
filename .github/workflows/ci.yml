name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_NAME: xiv-actions-api
  REGISTRY_GITHUB: docker.pkg.github.com/${{ github.repository }}
  REGISTRY_HEROKU: registry.heroku.com/xiv-actions-api

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Unit tests
        run: ./gradlew test

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  build:
    name: Build & publish image
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.APP_NAME }}
        tags: latest
        containerfiles: ./Containerfile

    - if: github.ref == 'refs/heads/main'
      id: push-github
      name: Push image to GitHub
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY_GITHUB }}
        username: ${{ github.actor }}asdvasdfvsdfvb
        password: ${{ github.token }}

  deploy:
    name: Deploy to Heroku
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Push image to heroku
      run: >-
        skopeo copy
        docker://${{ env.REGISTRY_GITHUB }}/${{ env.APP_NAME }}
        docker://${{ env.REGISTRY_HEROKU }}/web
        --src-creds '${{ github.actor }}:${{ github.token }}'
        --dest-creds '${{ secrets.HEROKU_EMAIL }}:${{ secrets.HEROKU_API_KEY  }}'

    - name: Publish image
      run: heroku container:release -a ${{ env.APP_NAME }} web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
